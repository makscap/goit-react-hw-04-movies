{"version":3,"sources":["components/MovieCast/MovieCast.module.css","components/MovieCast/MovieCast.jsx"],"names":["module","exports","Status","MovieCast","id","useState","cast","setCast","status","setStatus","error","setError","useEffect","moviesAPI","getMovieCast","then","data","console","log","length","Error","catch","Loader","className","s","wrapper","list","map","actor","item","image","src","profile_path","imagePlaceholder","alt","name","character","cast_id","style","fontFamily","message"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,QAAU,2BAA2B,KAAO,wBAAwB,KAAO,wBAAwB,MAAQ,yBAAyB,KAAO,wBAAwB,UAAY,+B,kJCM3LC,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAGG,SAASC,EAAT,GAA4B,IAAPC,EAAM,EAANA,GAAM,EAChBC,mBAAS,MADO,mBACjCC,EADiC,KAC3BC,EAD2B,OAEZF,mBAASH,GAFG,mBAEjCM,EAFiC,KAEzBC,EAFyB,OAGdJ,mBAAS,MAHK,mBAGjCK,EAHiC,KAG1BC,EAH0B,KAuBxC,OAlBAC,qBAAU,WACRH,EAAUP,GACVW,IACGC,aAAaV,GACbW,MAAK,SAAAC,GAEJ,GADAC,QAAQC,IAAIF,EAAKV,MACQ,IAArBU,EAAKV,KAAKa,OACZ,MAAM,IAAIC,MAAM,8BAElBb,EAAQS,EAAKV,MACbG,EAAUP,MAEXmB,OAAM,SAAAX,GACLC,EAASD,GACTD,EAAUP,QAEb,CAACE,IAGF,qCACGI,IAAWN,GAAkB,cAACoB,EAAA,EAAD,IAC7Bd,IAAWN,GACV,qBAAKqB,UAAWC,IAAEC,QAAlB,SACE,oBAAIF,UAAWC,IAAEE,KAAjB,SACGpB,EAAKqB,KAAI,SAAAC,GACR,OACE,qBAAIL,UAAWC,IAAEK,KAAjB,UACE,qBACEN,UAAWC,IAAEM,MACbC,IACEH,EAAMI,aAAN,yCACsCJ,EAAMI,cACxCC,IAENC,IAAKN,EAAMO,OAEb,mBAAGZ,UAAWC,IAAEW,KAAhB,SAAuBP,EAAMO,OAC7B,oBAAGZ,UAAWC,IAAEY,UAAhB,wBACcR,EAAMQ,UAAYR,EAAMQ,UAAY,eAZxBR,EAAMS,gBAoB3C7B,IAAWN,GACV,mBAAGoC,MAAO,CAAEC,WAAY,sBAAxB,SAAiD7B,EAAM8B","file":"static/js/movie-cast.4bcc70cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MovieCast_wrapper__3PmDN\",\"list\":\"MovieCast_list__3zClh\",\"item\":\"MovieCast_item__2i7Bv\",\"image\":\"MovieCast_image__2ny_s\",\"name\":\"MovieCast_name__3Fxc9\",\"character\":\"MovieCast_character__3zTfq\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moviesAPI from '../../services/movies-api';\nimport Loader from '../Loader';\nimport s from './MovieCast.module.css';\nimport imagePlaceholder from '../../images/imagePlaceholder.png';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function MovieCast({ id }) {\n  const [cast, setCast] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    moviesAPI\n      .getMovieCast(id)\n      .then(data => {\n        console.log(data.cast);\n        if (data.cast.length === 0) {\n          throw new Error('Cast data is not available');\n        }\n        setCast(data.cast);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [id]);\n\n  return (\n    <>\n      {status === Status.PENDING && <Loader />}\n      {status === Status.RESOLVED && (\n        <div className={s.wrapper}>\n          <ul className={s.list}>\n            {cast.map(actor => {\n              return (\n                <li className={s.item} key={actor.cast_id}>\n                  <img\n                    className={s.image}\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                        : imagePlaceholder\n                    }\n                    alt={actor.name}\n                  />\n                  <p className={s.name}>{actor.name}</p>\n                  <p className={s.character}>\n                    Character: {actor.character ? actor.character : 'unknown'}\n                  </p>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n      {status === Status.REJECTED && (\n        <p style={{ fontFamily: 'Roboto, sans-serif' }}>{error.message}</p>\n      )}\n    </>\n  );\n}\n\nMovieCast.propTypes = {\n  id: PropTypes.number.isRequired,\n};"],"sourceRoot":""}